View(dfBinary)
View(dfBinary[["paramTest0"]][["RI0.05.csv"]])
dfBinary[["paramTest0"]][['RI0.05.csv']]
colnames(dfBinary[["paramTest0"]][["RI0.05.csv"]])
a
a
a=dataframe()
a=data.frame()
a
a[['ra']]=0
a
a=cbind(a, columna)
a=cbind(a, 'columna')
a=rbind(a, 'columna')
a
a=rbind(a, 'columna3')
a=rbind(a, 'columna')
a
a=cbind(a, 'columna')
a
a[['columna']]=2
a
a[['columna',1]]=2
a[[1,'columna']]=2
a
a[[1,'columana']]=2
a
a[[1,1]]
a[[1]][[1]]
a[[1,2]]
a[[1,3]]
a[[4,3]]
a=data.frame(dfBinary[["paramTest0"]][["RI0.05.csv"]])
a
a=data.frame(mean(dfBinary[["paramTest0"]][["RI0.05.csv"]])
)
a=data.frame(mean(dfBinary[["paramTest0"]][["RI0.05.csv"]]))
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame()
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
Cs=colnames(dfBinary[[test]][[ri]])
probBinary[[test]]
for (c in Cs){
pB=mean(dfBinary[[test]][[ri]][[c]])
probBinary[[test]]=rbind(probBinary[[test]][[ri, c]], pB)
}
}
}
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame()
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
Cs=colnames(dfBinary[[test]][[ri]])
probBinary[[test]]
for (c in Cs){
pB=mean(dfBinary[[test]][[ri]][[c]])
probBinary[[test]]=rbind(probBinary[[test]][[ri, c]], pB)
}
}
}
View(probBinary)
a[[4]]
a
a=data.frame(df)
a
a[[1]]
length(colnames(df))
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame()
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
for (c in length(colnames(df))){
pB=mean(df[[test]][[ri]][[c]])
probBinary[[test]][[ri]]=rbind(probBinary[[test]][[ri]], pB)
}
}
}
a=data.frame()
a[[1]]=3
a
a=data.frame(a=0,b=0,c=0)
a
a=data.frame
a
a=data.frame()
aa
a
a=rbind(3)
a
a
a=data.frame()
a
a=cbind('ri')
a
a=data.frame()
a=cbind('ri', 0)
a
# Create Data Frame with NA's
a=data.frame(matrix(NA, nrow=100, ncol=2))
a
View(df)
help("colMeans")
df
colMeans(df)
a=colMeans(df)
typeof(a)
a
values(a)
b=data.frame()
b[[1]]=a
b=data.frame(matrix(NA,nrow = 71))
b
b[[1]]=a
b
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(NA, nrow = length(RIs), ncol = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
#  probBinary[[test]].coln
}
## Processing data. Generate Binary and timestep dataframe.
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(NA, nrow = 71, ncol = length(RIs)))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
#  probBinary[[test]].coln
}
View(dfBinary)
View(probBinary)
View(probBinary)
View(probBinary[["paramTest0"]])
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(NA, nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
#  probBinary[[test]].coln
}
View(probBinary)
View(probBinary)
View(probBinary[["paramTest0"]])
## Processing data. Generate Binary and timestep dataframe.
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
#  probBinary[[test]].coln
}
View(probBinary)
## Processing data. Generate Binary and timestep dataframe.
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame()
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
#  probBinary[[test]].coln
}
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
#  probBinary[[test]].coln
}
View(probBinary)
View(probBinary)
View(probBinary[["paramTest0"]])
View(probBinary)
help(rownames
)
help("row.names.data.frame")
colnames(df)
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
rownames(probBinary[[test]]) = colnames(df)
#  probBinary[[test]].coln
}
View(probBinary)
View(probBinary[["paramTest0"]])
a=data.frame(matrix(nrow = 3,ncol = 4))
a
a[['X1']]
a[['X1']]=NULL
a
probBinary[["paramTest0"]][[1]]
dfBinary=list()
probBinary=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfBinary[[test]]=list()
probBinary[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfBinary[[test]][[ri]]=df
probBinary[[test]][[ri]]=colMeans(df)
}
rownames(probBinary[[test]]) = colnames(df)
probBinary[[test]][[1]]=NULL
}
View(probBinary)
View(dfBinary)
View(dfBinary[["paramTest0"]][["RI0.05.csv"]])
View(probBinary)
View(probBinary[["paramTest0"]])
plot(probBinary[["paramTest0"]][["RI0.05.csv"]])
par(new=F)
plot(probBinary[["paramTest0"]][["RI0.05.csv"]])
plot(probRIc[["paramTest0"]][["RI0.05.csv"]], xlab = colanames(probRIc))
plot(probRIc[["paramTest0"]][["RI0.05.csv"]], xlab = row.names(probRIc[["paramTest0"]][["RI0.05.csv"]]))
## Processing data. Generate Binary and timestep dataframe.
dfRIc=list()
probRIc=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfRIc[[test]]=list()
probRIc[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfRIc[[test]][[ri]]=df
probRIc[[test]][[ri]]=colMeans(df)
}
rownames(probRIc[[test]]) = colnames(df)
probRIc[[test]][[1]]=NULL
}
plot(probRIc[["paramTest0"]][["RI0.05.csv"]], xlab = row.names(probRIc[["paramTest0"]][["RI0.05.csv"]]))
## plotting
row.names(probRIc[["paramTest0"]][["RI0.05.csv"]]
)
row.names(probRIc[["paramTest0"]][["RI0.05.csv"]]
)
row.names(probRIc[["paramTest0"]][["RI0.05.csv"]])
row.names.data.frame(probRIc[["paramTest0"]][["RI0.05.csv"]])
a=row.names(probRIc[["paramTest0"]][["RI0.05.csv"]])
a
row.names(df)
row.names(probRIc[["paramTest0"]])
row.names(probRIc[["paramTest0"]][["RI0.05.csv"]])
plot(probRIc[["paramTest0"]][["RI0.05.csv"]], xlab = row.names(probRIc[["paramTest0"]]))
ggplot(probRIc[["paramTest0"]][["RI0.05.csv"]], aes(x=row.names(probRIc[["paramTest0"]]), y=probRIc[["paramTest0"]][["RI0.05.csv"]]))
probRIc[["paramTest0"]][["RI0.05.csv"]]
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]), y=probRIc[["paramTest0"]][["RI0.05.csv"]]))
o
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]]) +
geom_point(size=2, shape=23))
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=2, shape=23)
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=2, shape=2)
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=2, shape=1)
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1, shape=1)
ggplot(probRIc[["paramTest0"]], aes(x=row.names(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1)
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1)
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method=lm)
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth()
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method=lm)
?loess
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method=loess())
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth()
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method=loess, se=TRUE,
fullrange= TRUE)
View(probRIc)
View(probRIc[["paramTest0"]])
dfRIc=list()
probRIc=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfRIc[[test]]=list()
probRIc[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfRIc[[test]][[ri]]=df
probRIc[[test]][[ri]]=colMeans(df)
}
probRIc[[test]][[1]] = colnames(df)
}
View(probRIc)
View(probRIc[["paramTest0"]])
dfRIc=list()
probRIc=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfRIc[[test]]=list()
probRIc[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfRIc[[test]][[ri]]=df
probRIc[[test]][[ri]]=colMeans(df)
}
probRIc[[test]][[1]] = colnames(df)
colnames(probRIc[[test]][[1]])=c
}
?colnames
colnames(probRIc[[test]])
colnames(probRIc[[test]])[1]
dfRIc=list()
probRIc=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfRIc[[test]]=list()
probRIc[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfRIc[[test]][[ri]]=df
probRIc[[test]][[ri]]=colMeans(df)
}
probRIc[[test]][[1]] = colnames(df)
colnames(probRIc[[test]])[colnames(probRIc[[test]])[1]]=c
}
dfRIc=list()
probRIc=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfRIc[[test]]=list()
probRIc[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfRIc[[test]][[ri]]=df
probRIc[[test]][[ri]]=colMeans(df)
}
probRIc[[test]][[1]] = colnames(df)
colnames(probRIc[[test]])[colnames(probRIc[[test]])==colnames(probRIc[[test]])[1]]=c
}
colnames(probRIc[[test]])
colnames(probRIc[[test]])
colnames(probRIc[[test]])[1]]
colnames(probRIc[[test]])[1]
colnames(probRIc[[test]])[1]
[colnames(probRIc[[test]])==colnames(probRIc[[test]])[1]]
colnames(probRIc[[test]])[colnames(probRIc[[test]])==colnames(probRIc[[test]])[1]]=c
a=colnames(probRIc[[test]])[1]
a
colnames(probRIc[[test]])[colnames(probRIc[[test]])==a]=c
colnames(probRIc[[test]])[colnames(probRIc[[test]])==a] <- c
colnames(probRIc[[test]])[colnames(probRIc[[test]])==colnames(probRIc[[test]])[1]] = 'c'
View(probRIc)
View(probRIc[["paramTest0"]])
ggplot(probRIc[["paramTest0"]], aes(x=probRIc[["paramTest0"]][['c']],
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method=loess, se=TRUE,
fullrange= TRUE)
## Processing data. Generate Binary and timestep dataframe.
dfRIc=list()
probRIc=list()
tests=list.files('RIcData', full.names = FALSE)
for (test in tests) {
RIs=list.files(paste('RIcData/',test, sep = ''))
dfRIc[[test]]=list()
probRIc[[test]]=data.frame(matrix(nrow = 71))
for (ri in RIs){
df=read.csv(paste('RIcData/',test,'/',ri, sep=''), na.strings = 'None', check.names = FALSE)
df[is.na(df)]=1
df[df!=1]=0
dfRIc[[test]][[ri]]=df
probRIc[[test]][[ri]]=colMeans(df)
}
rownames(probRIc[[test]]) = colnames(df)
probRIc[[test]][[1]]=NULL
}
ggplot(probRIc[["paramTest0"]], aes(x=rownames(probRIc[["paramTest0"]]),
y=probRIc[["paramTest0"]][["RI0.05.csv"]])) +
geom_point(size=1.5, shape=1) + geom_smooth(method=loess, se=TRUE,
fullrange= TRUE)
mgp
mpg
a=mpg
View(a)
View(dfRIc)
View(dfRIc[["paramTest0"]][["RI0.05.csv"]])
View(probRIc)
View(probRIc[["paramTest0"]])
View(df)
View(probRIc[["paramTest0"]])
View(probRIc[["paramTest0"]])
View(probRIc[["paramTest0"]])
