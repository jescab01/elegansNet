df[order(df.likert),]
df[order(df$likert),]
fibo=c(1,2,3,4,5,6)
for i in range(3):
tFrame(df)
who
objects()
detach("package:lsr", unload=TRUE)
who
who()
wideTolong(df)
a='no me llevare los relojes. ma;ana vivo'
strtrim(a, ' ')
strsplit(a, ' ')
strsplit(a)
strsplit(a, ' ')
strsplit(a, ' ', fixed=TRUE)
strsplit(a, ' ', fixed=FALSE)
a='no me llevare los relojes. ma;ana.vivo'
strsplit(a, ' ', fixed=FALSE)
strsplit(a, fixed=FALSE)
strsplit(a, '', fixed=FALSE)
c=c(strsplit(a, ' ' fixed=FALSE))
c=c(strsplit(a, ' ', fixed=FALSE))
c=c(strsplit(c, '.', fixed=FALSE))
c
strsplit(c,'.')
strsplit(c[6],'.')
c[6]
c[5]
c(5)
c
c
c=strsplit(a, '.', fixed=FALSE)
c
c=strsplit(a, ' ', fixed=FALSE)
c
c[4]
View(c)
unlist(c)
c=unlist(c)
c
c=strsplit(c, '.')
c
unlist(c)
c
c=strsplit(a)
c=strsplit(a,' ')
c
unlist(c)
c[5]
c[4]
c(5)
fd=strsplit(a,' ')
unlist(fd)
fd[4]
fd
unlist(fd)
fd=unlist(fd)
fd
fd[3]
fd=strsplit(fd, '.')
fd
fd[3]
a
a='hola manira. como te llams'
b=strsplit(a)
b=strsplit(a,' ')
b
b=strsplit(a, '.')
b
b=strsplit(a,'.',TRUE)
b
a=ma;ana vioajpo sin complicaciones. Vamos a vivir.la.vida.
a=ma vioajpo sin complicaciones. Vamos a vivir.la.vida.
a='ma;ana vioajpo sin complicaciones. Vamos a vivir.la.vida.'
a
b=strsplit(a,' ')
b
b[[5]]
b[5]
b=unlist(b)
b
b[5]
c=strsplit(b, '.', TRUE)
c
unlist(c)
d=unlist(c)
d
a=c(1,2,3,4)
b=c(3,4,5,6)
c=c(a,b)
c
c=c(c(a,b))
c
c=c(c(a,b),c(a,b))
c
b=strsplit(a,'.',TRUE)
Sys.Date()
Sys.Date()+22
POSIXct()
POSIXct
POSIXct???
/
help(time)
time()
timestamp()
##------ Mon Mar 18 13:04:31 2019 ------##
timestamp
timestamp(date,'','')
timestamp(date,' ',' ')
timestamp(date,' ',' ')
timestamp(stamp = date(), prefix='', suffix = '')
Mon Mar 18 13:06:02 2019
timestamp(date(),' ',' ')
Mon Mar 18 13:06:16 2019
timestamp(date())
##------ Mon Mar 18 13:06:22 2019 ------##
date()
date()
pwr.r.test(n=NULL, r=0.5, sig.level=0.001, power=0.9)
install.packages("pwr")
library("pwr", lib.loc="~/anaconda3/envs/rstudio/lib/R/library")
pwr.r.test(n=NULL, r=0.5, sig.level=0.001, power=0.9)
pwr.r.test(n=NULL, r=0.1, sig.level=0.001, power=0.99)
setwd("~/elegansProject/elegansSomatic/R analysis/Parameters")
library("dplyr", lib.loc="~/anaconda3/envs/rstudio/lib/R/library")
library("ggplot2", lib.loc="~/anaconda3/envs/rstudio/lib/R/library")
paramTest=read.csv('dataSomatic_Sat Jul  6 09:19:37 2019.csv')
paramTest1=mutate(paramTest, surviveBinary = surviveTime, rrp2spike=inATT-rrp2rest, ocrrp2spike=rrp2spike/(rrp2spike+rrp2rest))
paramTest1$surviveBinary[paramTest1$surviveBinary!=50]=0
paramTest1$surviveBinary[paramTest1$surviveBinary==50]=1
modelsurv=glm(surviveBinary~RI+c+att, data = paramTest1, family = "binomial")
summary(modelsurv)
modelsurv=glm(surviveBinary~RI+c+att+Psens, data = paramTest1, family = "binomial")
summary(modelsurv)
ggplot(paramTest1, aes(c, surviveBinary, group=as.factor(RI), colour=as.factor(RI))) +
geom_smooth(method = 'glm', method.args = list(family=binomial))+
xlab("Synaptic efficacy (c)")+
ylab("Persistance probability")+
labs(colour = "Initial\nactivity\n(RI)")
#### Working on minimum activity node
# filtered=filter(paramTest1, c==0.5, RI==0.4| RI==0.3|RI==0.5)
sampled=sample_n(paramTest1, 10000)
ggplot(sampled, aes(c, minNodeActivity, group=as.factor(RI), colour=as.factor(RI))) +
geom_jitter()+
xlab("Synaptic efficacy (c)")+
ylab("minNodeActivity")+
labs(colour = "Initial\nactivity\n(RI)")
ggplot(sampled, aes(c, minNodeActivity, group=as.factor(RI), colour=as.factor(RI))) +
geom_jitter(size=0.5)+
xlab("Synaptic efficacy (c)")+
ylab("minNodeActivity")+
labs(colour = "Initial\nactivity\n(RI)")
#### Working on minimum activity node
# filtered=filter(paramTest1, c==0.5, RI==0.4| RI==0.3|RI==0.5)
sampled=sample_n(paramTest1, 15000)
ggplot(sampled, aes(c, minNodeActivity, group=as.factor(RI), colour=as.factor(RI))) +
geom_jitter(size=0.5)+
xlab("Synaptic efficacy (c)")+
ylab("minNodeActivity")+
labs(colour = "Initial\nactivity\n(RI)")
#### Working on minimum activity node
# filtered=filter(paramTest1, c==0.5, RI==0.4| RI==0.3|RI==0.5)
sampled=sample_n(paramTest1, 40000)
ggplot(sampled, aes(c, minNodeActivity, group=as.factor(RI), colour=as.factor(RI))) +
geom_jitter(size=0.5)+
xlab("Synaptic efficacy (c)")+
ylab("minNodeActivity")+
labs(colour = "Initial\nactivity\n(RI)")
ggplot(sampled, aes(c, minNodeActivity, group=as.factor(RI), colour=as.factor(RI))) +
geom_jitter(size=0.7)+
xlab("Synaptic efficacy (c)")+
ylab("minNodeActivity")+
labs(colour = "Initial\nactivity\n(RI)")
##### working on attenuation coefficient
filtered=filter(paramTest1, surviveBinary==1)
modelrrp=glm(ocrrp2spike~att+c+RI+Psens, data = filtered, family = "binomial")
summary(modelrrp)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
##### working on attenuation coefficient
filtered=filter(sampled, surviveBinary==1)
modelrrp=glm(ocrrp2spike~att+c+RI+Psens, data = filtered, family = "binomial")
summary(modelrrp)
##### working on attenuation coefficient
modelrrp=glm(ocrrp2spike~att+c+RI+Psens, data = paramTest1, family = "binomial")
summary(modelrrp)
filtered=filter(sampled, surviveBinary==1)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
## Sampling
sampled=sample_n(paramTest1, 20000)
filtered=filter(sampled, surviveBinary==1)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
filtered=filter(paramTest1, c==0.1|c==0.2|c==0.3|c==0.41|c==0.5)
filtered=filter(sampled, c==0.1|c==0.2|c==0.3|c==0.41|c==0.5)
filtered=filter(filtered, surviveBinary==1)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
################################### Sampling
sampled=sample_n(paramTest1, 40000)
filtered=filter(sampled, c==0.1|c==0.2|c==0.3|c==0.41|c==0.5)
filtered=filter(filtered, surviveBinary==1)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(sampled, aes(RI, ocrrp2spike))+
geom_jitter()+
geom_smooth()
ggplot(filtered, aes(RI, ocrrp2spike))+
geom_jitter()+
geom_smooth()
ggplot(paramTest1, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(paramTest1, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
filtered=filter(sampled, c==0.1|c==0.2|c==0.3|c==0.41|c==0.5)
filtered=filter(paramTest1, c==0.1|c==0.2|c==0.3|c==0.41|c==0.5)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
filtered=filter(sampled, c==0.1|c==0.15|c==0.2|c==0.25|c==0.3|c==0.35|c==0.41|c==0.45|c==0.5)
filtered=filter(sampled, c==0.1|c==0.15|c==0.2|c==0.25|c==0.3|c==0.35|c==0.41|c==0.45|c==0.5)
filtered=filter(paramTest1, c==0.1|c==0.15|c==0.2|c==0.25|c==0.3|c==0.35|c==0.41|c==0.45|c==0.5)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.5)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.2)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.1)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.1)+
geom_smooth()+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.1)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
filtered=filter(paramTest1, c==0.1|c==0.15|c==0.2|c==0.25|c==0.3|c==0.35|c==0.41|c==0.45|c==0.5, surviveBinary==1)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.1)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
summary(modelrrp)
##### working on attenuation coefficient
modeladt=glm(ocrrp2spike~att+c+RI+Psens, data = paramTest1, family = "binomial")
summary(modeladt)
#Distributions of rrp2rest and rrp2spike
datasurvive=filter(paramTest1, surviveBinary==1)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour="red")+
geom_histogram(aes(rrp2spike), binwidth = 5, colour="grey")
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour="red", alpha=0.5)+
geom_histogram(aes(rrp2spike), binwidth = 5, colour="grey",alpha=0.5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour="red", alpha=0.5)+
geom_histogram(aes(rrp2spike), binwidth = 5, colour="grey", alpha=0.2)
ggplot(datasurvive, aes(rrp2rest))+
geom_density(binwidth = 3, colour="red", alpha=0.5)+
geom_histogram(aes(rrp2spike), binwidth = 5, colour="grey", alpha=0.2)
ggplot(datasurvive, aes(rrp2rest, alpha=0.5))+
geom_histogram(binwidth = 3, colour="red")+
geom_histogram(alpha=0.2, aes(rrp2spike), binwidth = 5, colour="grey")
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour="red", alpha=0.5)+
geom_histogram(alpha=0.2, aes(rrp2spike), binwidth = 5, colour="grey")
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour="red", alpha=0.5)+
geom_histogram(alpha=0.2, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour="red", alpha=0.5)+
geom_histogram(alpha=0.7, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, alpha=0.5)+
geom_histogram(alpha=0.7, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour='seablue' alpha=0.5)+
geom_histogram(alpha=0.7, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour='seablue', alpha=0.5)+
geom_histogram(alpha=0.7, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour='lightskyblue', alpha=0.5)+
geom_histogram(alpha=0.7, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour='lightskyblue', alpha=0.5)+
geom_histogram(alpha=0.5, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, alpha=0.5)+
geom_histogram(alpha=0.5, aes(rrp2spike), binwidth = 5, colour='lightskyblue')
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, colour='lightskyblue', alpha=0.5)+
geom_histogram(alpha=0.5, aes(rrp2spike), binwidth = 5)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, alpha=0.5)+
geom_histogram(alpha=0.5, aes(rrp2spike), binwidth = 5)
mutation=mutate(paramTest1, normalizedrrp2spike=rrp2spike/max(rrp2spike))
ggplot(sampled2, aes(att, normalizedrrp2spike, group=c, colour=as.factor(c)))+
geom_jitter(size=0.5)+
geom_smooth()
ggplot(mutation, aes(att, normalizedrrp2spike, group=c, colour=as.factor(c)))+
geom_jitter(size=0.5)+
geom_smooth()
psensmutation=mutate(filtered, ocactive= active/50, ocactiveG= activeG/(11*active),
ocactiveSG= activeSG /(3*activeG), ocactiveNode= activeNode/(10*activeSG))
psensmutation=mutate(paramTest1, ocactive= active/50, ocactiveG= activeG/(11*active),
ocactiveSG= activeSG /(3*activeG), ocactiveNode= activeNode/(10*activeSG))
View(paramTest1)
psensmutation=mutate(paramTest1, ocactive= sens/50, ocactiveG= sensG/(11*active),
ocactiveSG= sensSG /(3*activeG), ocactiveNode= sensNode/(10*activeSG))
psensmutation=mutate(paramTest1, ocactive= sens/50, ocactiveG= sensG/(11*active),
ocactiveSG= sensSG /(3*activeG), ocactiveNode= sensNode/(10*activeSG))
psensmutation=mutate(paramTest1, ocactive= sens/50, ocactiveG= sensG/(11*sens),
ocactiveSG= sensSG /(3*sensG), ocactiveNode= sensNode/(10*sensSG))
ggplot(psensmutation, aes(Psens, ocactive))+
geom_point()+
scale_y_continuous(limits = c(0,0.5))
ggplot(psensmutation, aes(Psens,activeG))+
geom_point()
ggplot(psensmutation, aes(Psens,sensG))+
geom_point()
ggplot(psensmutation, aes(Psens,sensG))+
geom_point()
ggplot(psensmutation, aes(Psens,sensSG))+
geom_point()
ggplot(psensmutation, aes(Psens,sensNode))+
geom_point()
ggplot(psensmutation, aes(Psens,sensG))+
geom_point(size=0.7, alpha=0.4)
ggplot(psensmutation, aes(Psens,sensG))+
geom_point(size=0.7, alpha=0.1)
ggplot(psensmutation, aes(Psens,sensSG))+
geom_point(size=0.7, alpha=0.4)
ggplot(psensmutation, aes(Psens,sensSG))+
geom_point(size=0.7, alpha=0.1)
ggplot(psensmutation, aes(Psens,sensNode))+
geom_point(size=0.7, alpha=0.1)
ggplot(psensmutation, aes(Psens, ocactive))+
geom_point()+
scale_y_continuous(limits = c(0,0.5))
psensmutation=mutate(paramTest1, ocactive= sens/12, ocactiveG= sensG/(11*sens),
ocactiveSG= sensSG /(3*sensG), ocactiveNode= sensNode/(10*sensSG))
ggplot(psensmutation, aes(Psens, ocactive))+
geom_point()+
scale_y_continuous(limits = c(0,0.5))
psensmutation=mutate(paramTest1, ocactive= sens/11, ocactiveG= sensG/(11*sens),
ocactiveSG= sensSG /(3*sensG), ocactiveNode= sensNode/(10*sensSG))
ggplot(psensmutation, aes(Psens, ocactive))+
geom_point()+
scale_y_continuous(limits = c(0,0.5))
cycles=12
nG=1
nSG=3
avgN=(5+5+3)/3 #Average number of neurons per group.
psens=mutate(sampled, ocsens= sens/cycles, ocsensG=sensG/(nG*sens),
ocsensSG=sensSG/(nSG*sensG), ocsensNode= sensNode/(avgN*sensSG))
# Proportions. Hopefully it is a stright line.
ggplot(psens, aes(Psens, ocsens))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of stimulations')
ggplot(psens, aes(Psens,ocsensG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated groups')
modelsurv=glm(surviveBinary~RI+c+att+Psens, data = paramTest1, family = "binomial")
summary(modelsurv)
ggplot(paramTest1, aes(c, surviveBinary, group=as.factor(RI), colour=as.factor(RI))) +
geom_smooth(method = 'glm', method.args = list(family=binomial))+
xlab("Synaptic efficacy (c)")+
ylab("Persistance probability")+
labs(colour = "Initial\nactivity\n(RI)")
#### Working on minimum activity node -----
# filtered=filter(paramTest1, c==0.5, RI==0.4| RI==0.3|RI==0.5)
ggplot(sampled, aes(c, minNodeActivity, group=as.factor(RI), colour=as.factor(RI))) +
geom_jitter(size=0.7)+
xlab("Synaptic efficacy (c)")+
ylab("minNodeActivity")+
labs(colour = "Initial\nactivity\n(RI)")
##### working on attenuation coefficient ------
modeladt=glm(ocrrp2spike~att+c+RI+Psens, data = paramTest1, family = "binomial")
summary(modeladt)
filtered=filter(paramTest1, c==0.1|c==0.15|c==0.2|c==0.25|c==0.3|c==0.35|c==0.41|c==0.45|c==0.5, surviveBinary==1)
ggplot(filtered, aes(att, ocrrp2spike, group=c, colour=as.factor(c))) +
geom_jitter(size=0.5, alpha=0.1)+
geom_smooth(method = 'glm', method.args = list(family=binomial), se=F)+
xlab("attenuation coefficient (att)")+
ylab("Attenuated spikes \n(normalized)")+
labs(colour="Synaptic\neffcicacy")
#Distributions of rrp2rest and rrp2spike
datasurvive=filter(paramTest1, surviveBinary==1)
ggplot(datasurvive, aes(rrp2rest))+
geom_histogram(binwidth = 3, alpha=0.5)+
geom_histogram(alpha=0.5, aes(rrp2spike), binwidth = 5)
cycles=12
nG=1
nSG=3
avgN=(5+5+3)/3 #Average number of neurons per group.
psens=mutate(sampled, ocsens= sens/cycles, ocsensG=sensG/(nG*sens),
ocsensSG=sensSG/(nSG*sensG), ocsensNode= sensNode/(avgN*sensSG))
# Proportions. Hopefully it is a stright line.
ggplot(psens, aes(Psens, ocsens))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of stimulations')
ggplot(psens, aes(Psens,ocsensG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated groups')
ggplot(psens, aes(Psens,ocsensSG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated subgroups')
ggplot(psens, aes(Psens,ocsensNode))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated nodes')
# Proportions. Hopefully stright lines.
ggplot(psens, aes(Psens, ocsens))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Proportion of stimulations')
ggplot(psens, aes(Psens,ocsensG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Proportion of activated groups')
ggplot(psens, aes(Psens,ocsensSG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Proportion of activated subgroups')
ggplot(psens, aes(Psens,ocsensNode))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Proportion of activated nodes')
# Proportions. Hopefully stright lines.
ggplot(psens, aes(Psens, ocsens))+
geom_point(alpha=0.1, color='grey40', size=0.7)+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Proportion of stimulations')
## Absolute numbers.
ggplot(psens, aes(Psens, sens))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of stimulations')
ggplot(psens, aes(Psens,sensG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated groups')
ggplot(psens, aes(Psens,sensSG))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated subgroups')
ggplot(psens, aes(Psens,sensNode))+
geom_point(alpha=0.1, color='grey40')+
stat_summary(fun.y = "mean", colour = "darkred", size = 4,shape=18, geom = "point")+
ylab('Number of activated nodes')
