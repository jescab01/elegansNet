aspect.ratio = 1)
## Functional matrix w/o sefl connections CATEGORICAL
ggplot(SFdf1, aes(x = from, y = to, color=as.factor(connPsi2))) +
geom_point(shape=15, size=6, alpha=0.8) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_manual(values=c('aquamarine3','white', 'chocolate1'))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections CATEGORICAL
ggplot(SFdf1, aes(x = from, y = to, color=as.factor(connPsi2))) +
geom_point(shape=15, size=6, alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_manual(values=c('aquamarine3','white', 'chocolate1'))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections CATEGORICAL
ggplot(SFdf1, aes(x = from, y = to, color=as.factor(connPsi2))) +
geom_point(shape=15, size=6, alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_manual(values=c('aquamarine3','white', 'chocolate1'))+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections CATEGORICAL
ggplot(SFdf1, aes(x = from, y = to, color=as.factor(connPsi2))) +
geom_point( size=6, alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_manual(values=c('aquamarine3','white', 'chocolate1'))+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections CATEGORICAL
ggplot(SFdf1, aes(x = from, y = to, color=as.factor(connPsi2))) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_manual(values=c('aquamarine3','white', 'chocolate1'))+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections
ggplot(SFdf1, aes(x = from, y = to, color=connPhiPsi)) +
geom_point(shape=15, size=6, alpha=0.8) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections logarithmic tranformation
SFdf1$logPhiPsi=log(abs(SFdf1$connPhiPsi))
SFdf1$logPhiPsi[SFdf$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf$connPhiPsi<0]*-1
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional connectivity matrix
ggplot(SFdf, aes(x = from, y = to, color=connPhiPsi)) +
geom_point(shape=15) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Functional matrix w/o sefl connections
ggplot(SFdf1, aes(x = from, y = to, color=connPhiPsi)) +
geom_point(shape=15, size=6, alpha=0.8) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections logarithmic tranformation
SFdf1$logPhiPsi=log(abs(SFdf1$connPhiPsi))
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
SFdf1$logPhiPsi[SFdf1$logPhiPsi=-Inf]=0
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Functional matrix w/o sefl connections logarithmic tranformation
SFdf1$logPhiPsi=log(abs(SFdf1$connPhiPsi))
SFdf1$logPhiPsi[SFdf1$logPhiPsi=-Inf]=0
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
SFdf1$logPhiPsi[SFdf1$logPhiPsi==-Inf]=0
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
guides(colour = guide_legend(reverse=TRUE))+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5, size=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'lightcyan2', high = 'darkorange1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(alpha=0.5, size=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(shape=3, alpha=0.5, size=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Functional connectivity matrix
ggplot(SFdf, aes(x = from, y = to, color=connPhiPsi)) +
geom_point(shape=15) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Functional matrix w/o sefl connections
ggplot(SFdf1, aes(x = from, y = to, color=connPhiPsi)) +
geom_point(shape=15, size=6, alpha=0.8) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1)
## Functional matrix w/o sefl connections logarithmic tranformation
SFdf1$logPhiPsi=log(abs(SFdf1$connPhiPsi))
SFdf1$logPhiPsi[SFdf1$logPhiPsi==-Inf]=0
SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]=SFdf1$logPhiPsi[SFdf1$connPhiPsi<0]*-1
ggplot(SFdf1, aes(x = from, y = to, color=logPhiPsi)) +
geom_point(shape=3, alpha=0.5, size=0.5) +
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Functional\nweight')+
ggtitle('Functional connectivity matrix w/o self conn. - Somatic')+
scale_colour_gradient2(low = 'aquamarine3', high = 'chocolate1')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Plot correlation
ggplot(SFdf2, aes(logsumEC, connPhiPsi))+
geom_point(size=0.5)+
geom_smooth(method='lm',formula=y~x, size=0.5)+
xlab('Structural Weight')+
ylab('Functional Weight')+
ggtitle('Weight correlation - Somatic')
