SFdf$catE[SFdf$logsumEC==0]=0
SFdf$catE[SFdf$logsumEC<0]=-1
## labels to variables
SFdf=apply_labels(SFdf, connPsi1='Functional connections w/o FDR',
connPsi1=c('Positive\ncorrelation'=1,'Negative\ncorrelation'=-1, 'Null'=0),
connPsi2='Functional connections w/ FDR',
connPsi2=c('Positive\ncorrelation'=1,'Negative\ncorrelation'=-1, 'Null'=0),
catE='Structural connections',
catE=c('Excitatory'=1,'Inhibitory'=-1, 'Non-Existent'=0))
####### with Psi1
cro(SFdf$connPsi1, list(SFdf$catE,total()))
addmargins(prop.table(table(SFdf$connPsi1, SFdf$catE), margin=2))
##Sensitivity and specificity just for excitatory connections as Somatic doesnt have inhibitory.
# Sensitivity of GC to predict structural excitatory connections
#(i.e. rate of true positives: TP/TP+FN)
SensitivityPsi1=sum(SFdf$connPsi1[SFdf$connPsi1==1&SFdf$catE==1])/sum(SFdf$catE[SFdf$catE==1])
SensitivityPsi1
# Specificity of GC to predict absent structural connecitons
#(i.e. rate of true negatives: TN/TN+FP)
SpecificityPsi1=abs(length(SFdf$catE[SFdf$connPsi1<=0&SFdf$catE<=0]))/length(SFdf$catE[SFdf$catE<=0])
SpecificityPsi1
chisq.test(SFdf$connPsi1, SFdf$catE)
ggplot(SFdf, aes(as.factor(catE), fill=as.factor(connPsi1)))+
geom_bar(width = 0.8)+
scale_fill_hue(direction = -1, h.start=90)+
xlab('Structural')+
labs(fill="Functional")+
ggtitle('Categorical predictions w/o FDR - Somatic')
####### with Psi2
cro(SFdf$connPsi2, list(SFdf$catE,total()))
addmargins(prop.table(table(SFdf$connPsi2, SFdf$catE)))
##Sensitivity and specificity just for excitatory connections as Somatic doesnt have inhibitory.
# Sensitivity of GC to predict structural excitatory connections
#(i.e. rate of true positives: TP/TP+FN)
SensitivityPsi1=sum(SFdf$connPsi2[SFdf$connPsi2==1&SFdf$catE==1])/sum(SFdf$catE[SFdf$catE==1])
SensitivityPsi1
# Specificity of GC to predict absent structural connecitons
#(i.e. rate of true negatives: TN/TN+FP)
SpecificityPsi1=abs(length(SFdf$catE[SFdf$connPsi2<=0&SFdf$catE<=0]))/length(SFdf$catE[SFdf$catE<=0])
SpecificityPsi1
chisq.test(SFdf$connPsi2,SFdf$catE)
ggplot(SFdf, aes(as.factor(catE), fill=as.factor(connPsi2)))+
geom_bar(width = 0.8)+
scale_fill_hue(direction = -1, h.start=90)+
xlab('Structural')+
labs(fill="Functional")+
ggtitle('Categorical predictions w/ FDR - Somatic')
### Use the best Psi predictor to eliminate non significant functional connectivity weights
SFdf$connPhiPsi=SFdf$connPhi
SFdf$connPhiPsi[SFdf$connPsi2==0]=0
### Analyzing weight correlations between functional and structural networks ----
cor.test(SFdf$connPhiPsi, SFdf$logsumEC, method=c("pearson"))
# Plot correlation
ggplot(SFdf, aes(logsumEC, connPhiPsi))+
geom_point(size=0.5)+
geom_smooth(method='lm',formula=y~x, size=0.5)+
xlab('Structural Weight')+
ylab('Functional Weight')+
ggtitle('Weight correlation - Somatic')
### Control for functional self connectivity.
# Strong anticorrelation due to Absolute refractory period.
SFdf$PhiPsiNself=SFdf$connPhiPsi
SFdf$PhiPsiNself[SFdf$from==SFdf$to]=0
# correlation w/o self functional connectivity
cor.test(SFdf$PhiPsiNself, SFdf$logsumEC, method=c("pearson"))
# Plot correlation (non self connections)
ggplot(SFdf, aes(logsumEC, PhiPsiNself))+
geom_point(size=0.5)+
geom_smooth(method='lm',formula=y~x, size=0.5)+
xlab('Structural Weight')+
ylab('Functional Weight')+
ggtitle('Weight correlation w/o self conn. - Somatic')
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
# Rotate the x-axis lables so they are legible
axis.text.x = element_text(angle = 270, hjust = 0),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
# Rotate the x-axis lables so they are legible
axis.text.x = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.3)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.5)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.9)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.8)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Create structural adjacency matrix showing weights
ggplot(edges, aes(x = from, y = to, group=Syn, color=lWxSGN, shape=Syn)) +
geom_point(alpha=0.7,size=2)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Connection\nweight', shape='Synapse type')+
scale_colour_gradient2(low = 'midnightblue', high = 'indianred' )+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Create structural adjacency matrix showing weights
ggplot(edges, aes(x = from, y = to, group=Syn, color=lWxSGN, shape=Syn)) +
geom_point(alpha=0.7,size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Connection\nweight', shape='Synapse type')+
scale_colour_gradient2(low = 'midnightblue', high = 'indianred' )+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Create structural adjacency matrix showing weights
ggplot(edges, aes(x = from, y = to, group=Syn, color=lWxSGN, shape=Syn)) +
geom_point(alpha=0.9,size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Connection\nweight', shape='Synapse type')+
scale_colour_gradient2(low = 'midnightblue', high = 'indianred' )+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Create structural adjacency matrix showing weights
ggplot(edges, aes(x = from, y = to, group=Syn, color=lWxSGN, shape=Syn)) +
geom_point(size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Connection\nweight', shape='Synapse type')+
scale_colour_gradient2(low = 'midnightblue', high = 'indianred' )+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Create structural adjacency matrix showing weights
ggplot(edges, aes(x = from, y = to, group=Syn, color=lWxSGN, shape=Syn)) +
geom_point(alpha=0.9,size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Connection\nweight', shape='Synapse type')+
scale_colour_gradient2(low = 'midnightblue', high = 'indianred' )+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.9, size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.7, size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
#### Plotting ----------
## Create structural adjacency matrix showing communities
ggplot(edges, aes(x = from, y = to, group=Syn, color=group, shape=Syn)) +
geom_point(alpha=0.5, size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Group', shape='Synapse type')+
scale_color_discrete(labels=c('Sensory','Sensory-Interneuron','Interneuron','Sensory-Motor','Sensory-Motor-Interneuron','Motor-Interneuron','Motor'))+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## Create structural adjacency matrix showing weights
ggplot(edges, aes(x = from, y = to, group=Syn, color=lWxSGN, shape=Syn)) +
geom_point(alpha=0.9,size=0.7)+
geom_hline(yintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
geom_vline(xintercept =c(68.5, 78.5, 145.5, 167.5, 173.5, 196.5), alpha=0.2)+
theme_light() +
# Because we need the x and y axis to display every node,
# not just the nodes that have connections to each other,
# make sure that ggplot does not drop unused factor levels
scale_x_discrete(drop = FALSE) +
scale_y_discrete(drop = FALSE) +
labs(colour='Connection\nweight', shape='Synapse type')+
scale_colour_gradient2(low = 'midnightblue', high = 'indianred' )+
ggtitle('Structural connectivity matrix - Somatic')+
theme(
legend.title.align = 0.5,
axis.text.x = element_blank(),
axis.text.y = element_blank(),
# Force the plot into a square aspect ratio
aspect.ratio = 1,
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
